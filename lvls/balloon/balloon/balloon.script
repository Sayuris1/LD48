local soundNo = 1
local balloons = 0

local function sine_movement(target, speed, frequency, amplitude)
	local position = go.get_position()
	local total_distance = vmath.length(target - position)
	local distance_to_target = total_distance
	local direction = vmath.normalize(target - position)
	local ortho_dir = vmath.rotate(vmath.quat_rotation_z(math.rad(90)), direction)
	return function(dt)
		local distance_to_travel = math.min(distance_to_target, speed * dt)
		if distance_to_travel > 0 then
			distance_to_target = distance_to_target - distance_to_travel
			local sine = math.sin(2 * math.pi * distance_to_target * frequency / total_distance) * amplitude
			position = position + direction * distance_to_travel
			go.set_position(position + ortho_dir * sine)
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")

	local pos = go.get_position()
	pos = pos + vmath.vector3(0, 5000, 0)

	self.move = sine_movement(pos, math.random(80, 150), math.random(10, 15), math.random(15, 20))
end

function update(self, dt)
	self.move(dt)
end

function on_message(self, message_id, message, sender)
	if message_id == cursor.PRESSED then
		sprite.play_flipbook("#sprite", lib.hashed("PoP"))
		go.set_scale(vmath.vector3(2, 2, 2))
		msg.post("#trigger", "disable")
		sound.play("#sound" .. soundNo)
		soundNo = ((soundNo + 1) % 3) + 1
		balloons = balloons + 1
		if balloons == 55 then
			msg.post("/timer#timer", lib.hashed("win"))
		end
	end
end